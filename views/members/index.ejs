<div class="container py-4">
  <div class="row mb-4">
    <div class="col-12">
      <h1 class="display-5 text-center mb-4">
        <i class="fas fa-users me-3"></i>
        Community Members
      </h1>
      <p class="text-center text-muted">
        Connect with fellow perfume enthusiasts
      </p>
    </div>
  </div>

  <!-- Search -->
  <div class="row mb-4">
    <div class="col-md-6 mx-auto">
      <div class="input-group">
        <span class="input-group-text">
          <i class="fas fa-search"></i>
        </span>
        <input
          type="text"
          class="form-control"
          id="searchInput"
          placeholder="Search members..."
        />
      </div>
    </div>
  </div>

  <!-- Members Grid -->
  <div class="row" id="members-container">
    <!-- Loading spinner -->
    <div class="col-12 text-center">
      <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Loading...</span>
      </div>
      <p class="mt-2">Loading members...</p>
    </div>
  </div>

  <!-- Pagination -->
  <div class="row mt-4">
    <div class="col-12">
      <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center" id="pagination">
          <!-- Pagination will be generated here -->
        </ul>
      </nav>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    loadMembers();

    // Search functionality
    document
      .getElementById("searchInput")
      .addEventListener("input", utils.debounce(loadMembers, 300));
  });

  async function loadMembers(page = 1) {
    const searchTerm = document.getElementById("searchInput").value;
    const container = document.getElementById("members-container");

    utils.showLoading(container);

    try {
      const queryParams = new URLSearchParams({
        page: page,
        limit: 12,
        search: searchTerm,
      });

      const response = await fetch(`/api/members?${queryParams}`);
      const data = await response.json();

      if (data.success) {
        displayMembers(data.data.members);
        displayPagination(data.data.pagination);
      } else {
        utils.showError(container, data.message);
      }
    } catch (error) {
      utils.showError(container, "Error loading members. Please try again.");
    }
  }

  function displayMembers(members) {
    const container = document.getElementById("members-container");

    if (members.length === 0) {
      container.innerHTML = `
            <div class="col-12 text-center">
                <div class="alert alert-info">
                    <i class="fas fa-info-circle me-2"></i>
                    No members found matching your search.
                </div>
            </div>
        `;
      return;
    }

    container.innerHTML = members
      .map(
        (member) => `
        <div class="col-lg-3 col-md-4 col-sm-6 mb-4">
            <div class="card h-100 shadow-sm">
                <div class="card-body text-center">
                    <div class="mb-3">
                        <div class="rounded-circle bg-primary d-inline-flex align-items-center justify-content-center" style="width: 60px; height: 60px;">
                            <i class="fas fa-user fa-2x text-white"></i>
                        </div>
                    </div>
                    <h5 class="card-title">${member.name}</h5>
                    <p class="card-text text-muted">${member.email}</p>
                    <p class="card-text">
                        <small class="text-muted">
                            <i class="fas fa-calendar me-1"></i>
                            Joined ${utils.formatDate(member.createdAt)}
                        </small>
                    </p>
                    <div class="mt-auto">
                        <span class="badge bg-primary">
                            <i class="fas fa-user me-1"></i>
                            ${member.role || "Member"}
                        </span>
                    </div>
                </div>
            </div>
        </div>
    `
      )
      .join("");
  }

  function displayPagination(pagination) {
    const paginationContainer = document.getElementById("pagination");

    if (pagination.pages <= 1) {
      paginationContainer.innerHTML = "";
      return;
    }

    let paginationHTML = "";

    // Previous button
    paginationHTML += `
        <li class="page-item ${pagination.page <= 1 ? "disabled" : ""}">
            <a class="page-link" href="#" onclick="loadMembers(${
              pagination.page - 1
            }); return false;">
                <i class="fas fa-chevron-left"></i>
            </a>
        </li>
    `;

    // Page numbers
    for (let i = 1; i <= pagination.pages; i++) {
      paginationHTML += `
            <li class="page-item ${i === pagination.page ? "active" : ""}">
                <a class="page-link" href="#" onclick="loadMembers(${i}); return false;">${i}</a>
            </li>
        `;
    }

    // Next button
    paginationHTML += `
        <li class="page-item ${
          pagination.page >= pagination.pages ? "disabled" : ""
        }">
            <a class="page-link" href="#" onclick="loadMembers(${
              pagination.page + 1
            }); return false;">
                <i class="fas fa-chevron-right"></i>
            </a>
        </li>
    `;

    paginationContainer.innerHTML = paginationHTML;
  }
</script>

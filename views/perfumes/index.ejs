<div class="container py-4">
  <div class="row mb-4">
    <div class="col-12">
      <h1 class="display-5 text-center mb-4">
        <i class="fas fa-spray-can me-3"></i>
        Our Perfume Collection
      </h1>

      <!-- Search and Filter -->
      <div class="row mb-4">
        <div class="col-md-6">
          <div class="input-group">
            <span class="input-group-text">
              <i class="fas fa-search"></i>
            </span>
            <input
              type="text"
              class="form-control"
              id="searchInput"
              placeholder="Search perfumes..."
            />
          </div>
        </div>
        <div class="col-md-3">
          <select class="form-select" id="brandFilter">
            <option value="">All Brands</option>
            <!-- Brands will be loaded here -->
          </select>
        </div>
        <div class="col-md-3">
          <select class="form-select" id="priceFilter">
            <option value="">All Prices</option>
            <option value="0-50">$0 - $50</option>
            <option value="51-100">$51 - $100</option>
            <option value="101-200">$101 - $200</option>
            <option value="201+">$201+</option>
          </select>
        </div>
      </div>
    </div>
  </div>

  <!-- Perfumes Grid -->
  <div class="row" id="perfumes-container">
    <!-- Loading spinner -->
    <div class="col-12 text-center">
      <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Loading...</span>
      </div>
      <p class="mt-2">Loading perfumes...</p>
    </div>
  </div>

  <!-- Pagination -->
  <div class="row mt-4">
    <div class="col-12">
      <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center" id="pagination">
          <!-- Pagination will be generated here -->
        </ul>
      </nav>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    loadPerfumes();
    loadBrands();

    // Search functionality
    document
      .getElementById("searchInput")
      .addEventListener("input", debounce(loadPerfumes, 300));
    document
      .getElementById("brandFilter")
      .addEventListener("change", loadPerfumes);
    document
      .getElementById("priceFilter")
      .addEventListener("change", loadPerfumes);
  });

  function debounce(func, wait) {
    let timeout;
    return function executedFunction(...args) {
      const later = () => {
        clearTimeout(timeout);
        func(...args);
      };
      clearTimeout(timeout);
      timeout = setTimeout(later, wait);
    };
  }

  async function loadPerfumes(page = 1) {
    const searchTerm = document.getElementById("searchInput").value;
    const brand = document.getElementById("brandFilter").value;
    const priceRange = document.getElementById("priceFilter").value;

    const container = document.getElementById("perfumes-container");
    container.innerHTML = `
        <div class="col-12 text-center">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mt-2">Loading perfumes...</p>
        </div>
    `;

    try {
      const queryParams = new URLSearchParams({
        page: page,
        limit: 12,
        search: searchTerm,
        brand: brand,
        priceRange: priceRange,
      });

      const response = await fetch(`/api/perfumes?${queryParams}`);
      const data = await response.json();

      if (data.success) {
        displayPerfumes(data.data.perfumes);
        displayPagination(data.data.pagination);
      } else {
        container.innerHTML = `
                <div class="col-12 text-center">
                    <div class="alert alert-warning">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        ${data.message}
                    </div>
                </div>
            `;
      }
    } catch (error) {
      container.innerHTML = `
            <div class="col-12 text-center">
                <div class="alert alert-danger">
                    <i class="fas fa-exclamation-circle me-2"></i>
                    Error loading perfumes. Please try again.
                </div>
            </div>
        `;
    }
  }

  function displayPerfumes(perfumes) {
    const container = document.getElementById("perfumes-container");

    if (perfumes.length === 0) {
      container.innerHTML = `
            <div class="col-12 text-center">
                <div class="alert alert-info">
                    <i class="fas fa-info-circle me-2"></i>
                    No perfumes found matching your criteria.
                </div>
            </div>
        `;
      return;
    }

    container.innerHTML = perfumes
      .map(
        (perfume) => `
        <div class="col-lg-3 col-md-4 col-sm-6 mb-4">
            <div class="card h-100 shadow-sm">
                <div class="card-img-top bg-light d-flex align-items-center justify-content-center" style="height: 200px;">
                    <i class="fas fa-spray-can fa-3x text-muted"></i>
                </div>
                <div class="card-body d-flex flex-column">
                    <h5 class="card-title">${perfume.name}</h5>
                    <p class="card-text text-muted small">${
                      perfume.brand?.name || "Unknown Brand"
                    }</p>
                    <p class="card-text flex-grow-1">${
                      perfume.description || "No description available"
                    }</p>
                    <div class="mt-auto">
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <span class="h5 text-primary mb-0">$${
                              perfume.price
                            }</span>
                            <span class="badge bg-secondary">${
                              perfume.size
                            }ml</span>
                        </div>
                        <a href="/perfumes/${
                          perfume._id
                        }" class="btn btn-primary w-100">
                            <i class="fas fa-eye me-1"></i>View Details
                        </a>
                    </div>
                </div>
            </div>
        </div>
    `
      )
      .join("");
  }

  function displayPagination(pagination) {
    const paginationContainer = document.getElementById("pagination");

    if (pagination.pages <= 1) {
      paginationContainer.innerHTML = "";
      return;
    }

    let paginationHTML = "";

    // Previous button
    paginationHTML += `
        <li class="page-item ${pagination.page <= 1 ? "disabled" : ""}">
            <a class="page-link" href="#" onclick="loadPerfumes(${
              pagination.page - 1
            }); return false;">
                <i class="fas fa-chevron-left"></i>
            </a>
        </li>
    `;

    // Page numbers
    for (let i = 1; i <= pagination.pages; i++) {
      paginationHTML += `
            <li class="page-item ${i === pagination.page ? "active" : ""}">
                <a class="page-link" href="#" onclick="loadPerfumes(${i}); return false;">${i}</a>
            </li>
        `;
    }

    // Next button
    paginationHTML += `
        <li class="page-item ${
          pagination.page >= pagination.pages ? "disabled" : ""
        }">
            <a class="page-link" href="#" onclick="loadPerfumes(${
              pagination.page + 1
            }); return false;">
                <i class="fas fa-chevron-right"></i>
            </a>
        </li>
    `;

    paginationContainer.innerHTML = paginationHTML;
  }

  async function loadBrands() {
    try {
      const response = await fetch("/api/brands");
      const data = await response.json();

      if (data.success) {
        const brandFilter = document.getElementById("brandFilter");
        const currentValue = brandFilter.value;

        data.data.forEach((brand) => {
          const option = document.createElement("option");
          option.value = brand._id;
          option.textContent = brand.name;
          brandFilter.appendChild(option);
        });

        brandFilter.value = currentValue;
      }
    } catch (error) {
      console.error("Error loading brands:", error);
    }
  }
</script>
